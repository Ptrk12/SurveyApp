// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SurveyDbContext))]
    partial class SurveyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entities.SurveyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "public",
                            Title = "My first survey"
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.SurveyQuestionAnswerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyQuestionAnswerEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "4"
                        },
                        new
                        {
                            Id = 2,
                            Answer = "7"
                        },
                        new
                        {
                            Id = 3,
                            Answer = "9"
                        },
                        new
                        {
                            Id = 4,
                            Answer = "Park,Forest"
                        },
                        new
                        {
                            Id = 5,
                            Answer = "Cycling,Running"
                        },
                        new
                        {
                            Id = 6,
                            Answer = "Pizza,Burger"
                        },
                        new
                        {
                            Id = 7,
                            Answer = "Patryk"
                        },
                        new
                        {
                            Id = 8,
                            Answer = "300km"
                        },
                        new
                        {
                            Id = 9,
                            Answer = "12"
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.SurveyQuestionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Question = "How many people live in this house ?",
                            Type = "numeric"
                        },
                        new
                        {
                            Id = 2,
                            Question = "How do you rate healthcare in our country ?",
                            Type = "numeric"
                        },
                        new
                        {
                            Id = 3,
                            Question = "How do you rate today's weather ?",
                            Type = "numeric"
                        },
                        new
                        {
                            Id = 4,
                            Question = "Favourite places to spend free time ?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 5,
                            Question = "Favourite sports ?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 6,
                            Question = "Favourite food ?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 7,
                            Question = "What's your name ?",
                            Type = "open"
                        },
                        new
                        {
                            Id = 8,
                            Question = "How far is from Cracow to Warsaw?",
                            Type = "open"
                        },
                        new
                        {
                            Id = 9,
                            Question = "4 x 3 ?",
                            Type = "open"
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.SurveyQuestionUserAnswerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyQuestionId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("SurveyEntitySurveyQuestionEntity", b =>
                {
                    b.Property<int>("SurveyQuestionsId")
                        .HasColumnType("int");

                    b.Property<int>("SurveysId")
                        .HasColumnType("int");

                    b.HasKey("SurveyQuestionsId", "SurveysId");

                    b.HasIndex("SurveysId");

                    b.ToTable("SurveyEntitySurveyQuestionEntity");

                    b.HasData(
                        new
                        {
                            SurveyQuestionsId = 1,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 2,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 3,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 4,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 5,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 6,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 7,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 8,
                            SurveysId = 1
                        },
                        new
                        {
                            SurveyQuestionsId = 9,
                            SurveysId = 1
                        });
                });

            modelBuilder.Entity("SurveyQuestionAnswerEntitySurveyQuestionEntity", b =>
                {
                    b.Property<int>("SurveyQuestionAnswersId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyQuestionsId")
                        .HasColumnType("int");

                    b.HasKey("SurveyQuestionAnswersId", "SurveyQuestionsId");

                    b.HasIndex("SurveyQuestionsId");

                    b.ToTable("SurveyQuestionAnswerEntitySurveyQuestionEntity");

                    b.HasData(
                        new
                        {
                            SurveyQuestionAnswersId = 1,
                            SurveyQuestionsId = 1
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 2,
                            SurveyQuestionsId = 2
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 3,
                            SurveyQuestionsId = 3
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 4,
                            SurveyQuestionsId = 4
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 5,
                            SurveyQuestionsId = 5
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 6,
                            SurveyQuestionsId = 6
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 7,
                            SurveyQuestionsId = 7
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 8,
                            SurveyQuestionsId = 8
                        },
                        new
                        {
                            SurveyQuestionAnswersId = 9,
                            SurveyQuestionsId = 9
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.SurveyQuestionUserAnswerEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.SurveyQuestionEntity", "SurveyQuestion")
                        .WithMany()
                        .HasForeignKey("SurveyQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("SurveyEntitySurveyQuestionEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.SurveyQuestionEntity", null)
                        .WithMany()
                        .HasForeignKey("SurveyQuestionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.SurveyEntity", null)
                        .WithMany()
                        .HasForeignKey("SurveysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyQuestionAnswerEntitySurveyQuestionEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.SurveyQuestionAnswerEntity", null)
                        .WithMany()
                        .HasForeignKey("SurveyQuestionAnswersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.SurveyQuestionEntity", null)
                        .WithMany()
                        .HasForeignKey("SurveyQuestionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
